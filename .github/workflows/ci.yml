name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      run: pip install poetry==1.5.1
    
    - name: Configure Poetry
      run: poetry config virtualenvs.in-project true
    
    - name: Install dependencies
      run: poetry install --no-interaction --no-root
    
    - name: Check code formatting with Black
      run: poetry run black --check --diff .
    
    - name: Run tests with pytest
      run: poetry run pytest -v tests/
    
    - name: Generate API documentation
      run: |
        poetry run pdoc --html pygraph -o html
        echo "API Documentation generated"
    
    - name: Upload documentation artifact
      if: ${{ success() }}
      uses: actions/upload-artifact@v3
      with:
        name: api-docs
        path: html/